name: Build and Release FACEIT Analyze

on:
  push:
    tags:
      - 'v*'  # –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ–≥–∞ –≤–µ—Ä—Å–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, v1.0.0)
  workflow_dispatch:  # –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Ä—É—á–Ω—É—é

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install kivy[base] requests python-dotenv pyinstaller Pillow
        
    - name: Create .env file
      run: |
        echo "FACEIT_API_KEY=${{ secrets.FACEIT_API_KEY }}" > .env
        
    - name: Build executable
      run: |
        pyinstaller faceit_tracker.spec
        
    - name: Verify build
      run: |
        if (Test-Path "dist/FACEIT Analyze.exe") {
          Write-Host "Build successful - executable found"
          Get-ChildItem "dist/FACEIT Analyze.exe" | Format-List
        } else {
          Write-Error "Build failed - executable not found"
          exit 1
        }
        
    - name: Create release archive
      run: |
        Compress-Archive -Path "dist/FACEIT Analyze.exe" -DestinationPath "FACEIT-Analyze-Windows.zip"
        
    - name: Get version from tag
      id: version
      run: |
        if ($env:GITHUB_REF -match "refs/tags/(.*)") {
          $version = $matches[1]
        } else {
          $version = "dev-$(Get-Date -Format 'yyyyMMdd-HHmmss')"
        }
        echo "VERSION=$version" >> $env:GITHUB_OUTPUT
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        name: FACEIT Analyze ${{ steps.version.outputs.VERSION }}
        body: |
          ## FACEIT Analyze ${{ steps.version.outputs.VERSION }}
          
          üéÆ **–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ FACEIT –¥–ª—è CS:2**
          
          ### üìã –ß—Ç–æ –Ω–æ–≤–æ–≥–æ:
          - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–±–æ—Ä–∫–∞ —á–µ—Ä–µ–∑ GitHub Actions
          - –£–ª—É—á—à–µ–Ω–Ω–∞—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å
          - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ CS:2 —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
          
          ### üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞:
          1. –°–∫–∞—á–∞–π—Ç–µ `FACEIT-Analyze-Windows.zip`
          2. –†–∞—Å–ø–∞–∫—É–π—Ç–µ –∞—Ä—Ö–∏–≤
          3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ `FACEIT Analyze.exe`
          
          ### üîß –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:
          - Windows 10/11
          - –ò–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
          
          ### üìñ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
          - –í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –∏–≥—Ä–æ–∫–∞ –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å FACEIT
          - –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "SCAN"
          - –ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
          
          ---
          üîó [–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥](https://github.com/${{ github.repository }})
        files: |
          FACEIT-Analyze-Windows.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}